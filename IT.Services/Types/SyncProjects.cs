//******************************************************************************
// Система оперативного управления проектами - Incident Tracker
// ЗАО КРОК инкорпорейтед, 2005
//******************************************************************************
// Дополнительные классы и перечисления, используемые в методах синхронизации 
// данных проектов - см. реализацию сервиса CommonService
using System;

namespace Croc.IncidentTracker.Services
{
	/// <summary>
	/// Определяет перечень значений, отражающих значимые состояния проектов, 
	/// описания которых представлены в системе Incident Tracker и системах НСИ
	/// </summary>
	[Serializable]
	public enum ProjectStates 
	{
		/// <summary>
		/// Проект открыт. 
		/// По проекту ведутся работы. В системе Incident Tracker для проекта 
		/// разрешено выполнение всех операций, допустимых с учетом текущих 
		/// привилегий пользователей. 
		/// </summary>
		Open = 1,

		/// <summary>
		/// Проект на стадии "Ожидание закрытия"
		/// По сути то же, что и "Открыт" за одним исключением: по таким проектам
		/// Incident Tracker осуществяляет периодическую рассылку с напоминанием
		/// </summary>
		WaitingToClose = 2,

		/// <summary>
		/// Проект закрыт. 
		/// Для закрытого проекта в системе Incident Tracker запрещены какие-либо 
		/// операции, влияющие на реквизиты, структуру проекта, влияющие на объем или 
		/// структуру списаний, соотнесенных с проектом.
		/// </summary>
		Closed = 3,

		/// <summary>
		/// Проект заморожен
		/// Для замороженного проекта в системе Incident Tracker запрещены какие-либо 
		/// операции, влияющие на реквизиты, структуру проекта, влияющие на объем или 
		/// структуру списаний, соотнесенных с проектом; но при этом возможен перевод
		/// состояния проекта в любое состояние, отличное от "Заморожен".
		/// </summary>
		Frozen = 4
	}
		
		
	/// <summary>
	/// Представляет данные конкретного проекта, описание которого представлено 
	/// в системе Incident Tracker
	/// </summary>
	[Serializable]
	public class ProjectInfo 
	{
		/// <summary>
		/// Строка c указанием идентификатора проекта, данные которого 
		/// представлены экземпляром класса. Значение свойства соответствует 
		/// значению свойства ObjectID объекта «Папка» (Folder), представляющего
		/// в системе данные проекта.
		/// </summary>
		public string ObjectID;

		/// <summary>
		/// Строка c указанием идентификатора организации Клиента, к которому 
		/// относится проект, описываемый экземпляром класса. Значение свойства 
		/// соответствует значению свойства «Клиент» (Folder.Customer) объекта 
		/// «Папка» (Folder)
		/// </summary>
		public string CustomerID;
		
		/// <summary>
		/// Строка с указанием уникального кода проекта. Значение свойства 
		/// соответствует значению свойства «Код проекта» (Folder.ProjectCode) 
		/// объекта «Папка» (Folder)
		/// </summary>
		public string Code;
		
		/// <summary>
		/// Строка с идентификатором соответствующего описания проекта в Navision.
		/// Значение соответствует свойству «Идентификатор во внешней системе» 
		/// (Organization.ExternalID) объекта «Организация» (Organization).
		/// Задание значений не является обязательным; 		
		/// </summary>
		public string NavisionID;
		
		/// <summary>
		/// Строка с указанием наименования проекта. Значение свойства 
		/// соответствует значению свойства «Наименование» (Folder.Name) объекта 
		/// «Папка» (Folder)
		/// </summary>
		public string Name;
		
		/// <summary>
		/// Логический признак, отражающий признак «Проект на стадии пилота» для 
		/// проекта, описываемого экземпляром класса. Значение True соответствует 
		/// проекту, находящемуся на стадии «пилота». Значение соответствует 
		/// значению свойства «Пилот» (Folder.IsPrototype) объекта «Папка» (Folder)
		/// </summary>
		public bool IsPilot;
		
		/// <summary>
		/// Значение перечисления типа ProjectStates, отражающее состояние 
		/// проекта. Значение свойства является синтетическим; в общем смысле 
		/// значение свойства соответствует значению свойства «Состояние» 
		/// (Folder.State) объекта «Папка» (Folder)
		/// <seealso cref="ProjectStates"/>
		/// </summary>
		public ProjectStates State;
		
		/// <summary>
		/// Строка c указанием идентификатора старшего проекта, которому подчинен 
		/// проект, описываемый экземпляром класса. Значение свойства соответствует 
		/// значению свойства «Вышестоящая» (Folder.Parent) объекта «Папка» (Folder)
		/// </summary>
		/// <remarks>
		/// В случае если для описываемого проекта старший проект не определен, 
		/// значение данного свойства устанавливается в null
		/// </remarks>
		public string MasterProjectID;
	}
		
	
	/// <summary>
	/// Представляет расширенный набор данных конкретного проекта, описание 
	/// которого представлено в системе Incident Tracker. 
	/// Класс порожден от класса ProjectInfo, и представляет все свойства 
	/// базового класса без изменений.
	/// <seealso cref="ProjectInfo"/>
	/// </summary>
	[Serializable]
	public class ProjectAdditionalInfo : ProjectInfo 
	{
		/// <summary>
		/// Строка с указанием идентификатора сотрудника, являющегося инициатором 
		/// создания проекта в системе Incident Tracker. Значение свойства 
		/// соответствует значению свойства ObjectID объекта «Сотрудник» 
		/// (Employee), представляющего в системе данные сотрудника
		/// </summary>
		public string InitiatorEmployeeID;
		
		/// <summary>
		/// Строка с указанием идентификатора сотрудника, установившего проект 
		/// в состояние «Закрыт» в системе Incident Tracker (т.е. выполнившего 
		/// операцию закрытия проекта). Значение свойства соответствует значению 
		/// свойства ObjectID объекта «Сотрудник» (Employee), представляющего 
		/// в системе данные сотрудника
		/// </summary>
		public string EnderEmployeeID;
		
		/// <summary>
		/// Строка, представляющая текст комментариев к проекту (или описания 
		/// проекта). Значение соответствует значению свойства «Описание» 
		/// (Description) объекта «Папка» (Folder), представляющего в системе 
		/// данные проекта
		/// </summary>
		public string Comments;
	}


	/// <summary>
	/// Представляет данные о сотруднике-участнике проектной команды, 
	/// определенной в системе Incident Tracker для какого-либо проекта
	/// </summary>
	[Serializable]
	public class ProjectTeamParticipant 
	{
		/// <summary>
		/// Строка с указанием идентификатора сотрудника-участника проектной 
		/// команды. Значение свойства соответствует значению свойства ObjectID 
		/// объекта «Сотрудник» (Employee).
		/// </summary>
		public string EmployeeID;
		
		/// <summary>
		/// Массив строк, каждый элемент которого указывает идентификатор 
		/// элемента справочника проектных ролей – объекта «Роль пользователя 
		/// в папке» (UserRoleInProject), определяющего наименование проектной 
		/// роли и соответствующие роли привилегии, назначаемые сотруднику 
		/// при задании роли
		/// </summary>
		public string[] RoleIDs;
	}
    
    /// <summary>
    /// Представляет данные о направлениях активности
    /// определенной в системе Incident Tracker
    /// </summary>
    [Serializable]
    public class ProjectDirection
    {
        /// <summary>
        /// Строка с указанием идентификатора направления
        /// Значение свойства соответствует значению свойства ObjectID 
        /// объекта «Направление» (Direction).
        /// </summary>
        public string DirectionID;

        /// <summary>
        /// Целое число от 0 до 100, определяющее процент данного направления на проекте.
        /// Значение свойства соответствует значению свойства ExpenseRatio 
        /// объекта «Направление активности» (FolderDirection).
        /// </summary>
        public int ExpenseRatio;
    }
}