//******************************************************************************
// Система оперативного управления проектами - Incident Tracker
// ЗАО КРОК инкорпорейтед, 2005
//******************************************************************************
// Структура, представляющая результат вызова метода создания заявки на обучение
// (создание инцидента типа "Задание на обучение" в специальной папке)
// См. также реализацию метода CreateEducationRequest сервиса CommonService
using System;

namespace Croc.IncidentTracker.Services
{
	/// <summary>
	/// Структура, представляющая результат вызова метода создания заявки на 
	/// изменение системы CMDB (создание инцидента заданного типа в указанной
	/// папке)
	/// <seealso cref="CommonService.CreateChangeRequest"/>
	/// </summary>
	[Serializable]
	public class ChangeRequestResult 
	{
		/// <summary>
		/// Строка с идентификатором инцидента, созданного в системе Incident 
		/// Tracker в результате вызова метода. Если вызов метода завершается 
		/// ошибкой, свойство устанавливается в значение String.Empty;
		/// </summary>
		public string IncidentID = String.Empty;	
		
		/// <summary>
		/// Строка с номером инцидента, созданного в системе Incident Tracker 
		/// в результате вызова метода сервиса. Если вызов метода завершается 
		/// ошибкой, свойство устанавливается в значение String.Empty;
		/// </summary>
		public string IncidentNumber = String.Empty;
		
		/// <summary>
		/// Строка с описанием ошибки вызова метода сервиса; если вызов метода
		/// завершился успешно, то данное свойство устанавливается в значение
		/// String.Empty;
		/// </summary>
		public string ErrorDescription = String.Empty;

		/// <summary>
		/// Строка с текстом стека вызова, полученного в случае ошибки выполнения
		/// метода сервиса; если вызов метода завершился успешно, то данное 
		/// свойство устанавливается в значение String.Empty;
		/// </summary>
		public string ErrorStack = String.Empty;
	}
}